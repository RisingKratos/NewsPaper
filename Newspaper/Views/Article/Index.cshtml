@model PagedList.IPagedList<Newspaper.Models.Article>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Articles";
}

<h2>Students</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Article", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            Author
        </th>
        <th>
            Category
        </th>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParameter, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Content", "Index", new { sortOrder = ViewBag.ContentSortParameter, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Created Date", "Index", new { sortOrder = ViewBag.DateSortParameter, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Views", "Index", new { sortOrder = ViewBag.ViewSortParameter, currentFilter = ViewBag.CurrentFilter })
            <!--Cannot bring it directly as property, only by strongly parametrized methods-->
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Author.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Category.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ShortContent)...
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Views)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))